alamo.program = fracture

timestep = 1e-4
stop_time = 1.e-1

plot_file = output
amr.plot_int = 100
amr.max_level = 4
amr.n_cell = 64 64
amr.blocking_factor = 16
amr.regrid_int = 10
amr.grid_eff = 1.0
amr.thermo.int = 1

geometry.prob_lo = -0.01 -0.01
geometry.prob_hi = 0.01 0.01
geometry.is_periodic = 0 0

crack.refinement_threshold = 0.5
crack.df.tol_rel = 0.01
crack.df.tol_abs = 0.0

crack.df.mult_Gc = 1.0
crack.df.mult_Lap = 1.0
crack.df.beta = 0.1
crack.df.el_mult = 1.e9

crack.model1.type = constant
crack.model1.constant.G_c = 2.7e3
crack.model1.constant.zeta = 1.e-5
crack.model1.constant.mobility = 1.0e-5
crack.model1.constant.gtype = 4c3
crack.model1.constant.wtype = 4c3
crack.model1.constant.threshold = 0.0

# crack.model2.type = constant
# crack.model2.constant.G_c = 2.7e3
# crack.model2.constant.zeta = 1.e-5
# crack.model2.constant.mobility = 1.0e-5
# crack.model2.constant.gtype = square
# crack.model2.constant.wtype = square
# crack.model2.constant.threshold = 0.0

crack.ic.type = notch
crack.ic.notch.center = -0.01 0.0
crack.ic.notch.orientation = 1.0 0.0
crack.ic.notch.thickness = 3.e-4
crack.ic.notch.length = 2.e-2
crack.ic.notch.eps = 4.e-5
crack.ic.notch.mollifier = erf

# crack.ic.type = expression
# crack.ic.expression.region0 = "(x > -0.005) or (y > 0.0001 or y < -0.0001)"

crack.bc.type.xhi = NEUMANN
crack.bc.type.xlo = NEUMANN
crack.bc.type.yhi = NEUMANN
crack.bc.type.ylo = NEUMANN

material.model1.type = isotropic
material.model1.isotropic.lambda = 121.15
material.model1.isotropic.mu = 80.77

#material.model2.type = isotropic
#material.model2.isotropic.lambda = 121.15
#material.model2.isotropic.mu = 80.77

material.refinement_threshold = 1.e-1
# material.ic.type = ellipse
# material.ic.ellipse.number_of_inclusions = 1
# material.ic.ellipse.radius = 2.5e-3 2.5e-3
# material.ic.ellipse.eps = 3.e-4
# material.ic.ellipse.center = 0.00000000 0.00150000

### Mode-I test
bc.type = constant
bc.constant.type.xloylo = disp disp
bc.constant.type.xlo    = disp trac
bc.constant.type.xloyhi = disp disp
bc.constant.type.ylo    = disp disp
bc.constant.type.yhi    = disp disp
bc.constant.type.xhi    = disp trac
bc.constant.type.xhiylo = disp disp
bc.constant.type.xhiyhi = disp disp
bc.constant.val.yhi = 0.0 3.e-5
bc.constant.val.xloyhi = 0.0 3.e-5
bc.constant.val.xhiyhi = 0.0 3.e-5

### Mode-II test
# bc.type = constant
# bc.constant.type.xloylo = disp disp
# bc.constant.type.xlo    = trac disp
# bc.constant.type.xloyhi = disp disp
# bc.constant.type.ylo    = disp disp
# bc.constant.type.yhi    = disp disp
# bc.constant.type.xhi    = trac disp
# bc.constant.type.xhiylo = disp disp
# bc.constant.type.xhiyhi = disp disp
# bc.constant.val.yhi     = 8.e-5 0.0
# bc.constant.val.xloyhi  = 8.e-5 0.0
# bc.constant.val.xhiyhi  = 8.e-5 0.0



#
# Solver inputs
#
elasticop.small=1.e-4
solver.bottom_solver = smoother
solver.tol_abs = 1E-16 # This is very important for near-singular problems!!!
solver.verbose = 3
solver.nriters = 1
solver.fixed_iter = 500

#
# Mechanics inputs
#
interval = 1
print_residual=1
elastic_ref_threshold = 1.e6
zero_out_displacement = 0


amrex.throw_exception = 1

