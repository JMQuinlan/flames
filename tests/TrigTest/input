#@  [2D, 1 AMR Levels] mpirun -np 2 ./bin/alamo-2d-g++ tests/TrigTest/input amr.max_level=0 
#@  [2D, 2 AMR Levels] mpirun -np 4 ./bin/alamo-2d-g++ tests/TrigTest/input amr.max_level=1
#@  [2D, 3 AMR Levels] mpirun -np 8 ./bin/alamo-2d-g++ tests/TrigTest/input amr.max_level=2
#@  [3D, 3 AMR Levels] mpirun -np 8 ./bin/alamo-3d-g++ tests/TrigTest/input amr.max_level=2

alamo.program                 = mechanics
alamo.program.mechanics.model = linear.laplacian
plot_file		      = tests/TrigTest/output

# this is not a time integration, so do
# exactly one timestep and then quit
timestep		      = 0.1
stop_time		      = 0.1

# amr parameters
amr.plot_int		      = 1
amr.max_level		      = 2
amr.n_cell		      = 32 32 32
amr.blocking_factor	      = 4
amr.regrid_int		      = 1
amr.grid_eff		      = 1.0
amr.cell.all                  = 1

# use an explicit mesh (i.e. no adaptive meshing)
explicitmesh.on               = 1
explicitmesh.lo1              = 16 16 16
explicitmesh.hi1              = 47 47 47
explicitmesh.lo2              = 48 48 48
explicitmesh.hi2              = 79 79 79

# geometry
geometry.prob_lo	      = 0 0 0
geometry.prob_hi	      = 1 1 1
geometry.is_periodic	      = 0 0 0

rhs.type = trig
rhs.trig.nr = 0 0 0
rhs.trig.ni = 1 1 1
rhs.dim = 1
rhs.alpha = 1

elastic.solver.verbose = 3
elastic.solver.nriters = 1
elastic.solver.max_iter = 20

### UNIAXIAL TENSION ###
elastic.bc.type = constant



