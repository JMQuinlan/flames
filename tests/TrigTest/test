#!/usr/bin/env python3
import numpy, yt, pylab, os

tolerance = 1E-4
E    = 210
nu   = 0.3
disp = 0.1
L    = 16.

path = "output/00001cell/"
ds = yt.load(path)
dim = int(ds.domain_dimensions[0] > 1) + int(ds.domain_dimensions[1] > 1) + int(ds.domain_dimensions[2] > 1)

prof = ds.ray([0,0,0],[1,1,1],)
df = prof.to_dataframe([("gas","x"),("gas","y"),("gas","z"),"disp001"])

x,y,z,u1 = [numpy.array(_x) for _x in zip(*sorted(zip(df["x"],df["y"],df["z"],df["disp001"])))]

u1_exact            = - numpy.sin(numpy.pi*x) / numpy.pi / numpy.pi / float(dim) 
if dim>1: u1_exact *=   numpy.sin(numpy.pi*y) 
if dim>2: u1_exact *=   numpy.sin(numpy.pi*z) 

pylab.plot(x,u1,marker='o')
pylab.plot(x,u1_exact)#,marker='o')
pylab.show()

#pylab.clf()
#pylab.plot(x,sig1,marker='o')
#pylab.plot(x,sig1_exact)
#pylab.savefig("output/sig1.png")
#pylab.clf()
#pylab.plot(x,u1,marker='o')
#pylab.plot(x,u1_exact)
#pylab.savefig("output/u1.png")


u1_err = sum((u1_exact - u1)**2) / sum(u1_exact**2)
print("displacement error",u1_err)

#sig1_err = sum((sig1_exact - sig1)**2) / sum(sig1_exact**2)
#print("stress error",sig1_err)

if u1_err > tolerance: raise(Exception("Error in u1"))
#if sig1_err > tolerance: raise(Exception("Error in sig1"))
                               
exit(0)

