#!/usr/bin/env python3
import sys
sys.path.insert(0,"../../scripts")
import testlib
import numpy, yt, pylab, os, pandas, sys, math

outdir = sys.argv[1]

generate_ref_data = False  # Change to True if you need to generate new reference data
tolerance = 0.02

path = "{}/02100cell/".format(outdir)
ds = yt.load(path)
dim = int(ds.domain_dimensions[0] > 1) + int(ds.domain_dimensions[1] > 1) + int(ds.domain_dimensions[2] > 1)

def integrate(x,y):
    ret = 0
    for i in range(len(x)-1): ret = ret + 0.5*(y[i+1]+y[i]) * (x[i+1]-x[i])
    return ret

testlib.validate(path="{}/02100cell/".format(outdir),
                 outdir=outdir,
                 start=[0,0,0],
                 end=[8,8,1],
                 vars=["Eta001"],
                 tolerance=tolerance,
                 reference="reference/reference-diag.csv",
                 filename_suffix="diag")

testlib.validate(path="{}/02100cell/".format(outdir),
                 outdir=outdir,
                 start=[0,4,0],
                 end=[8,4,1],
                 vars=["Eta001"],
                 tolerance=tolerance,
                 reference="reference/reference-across.csv",
                 filename_suffix="across")

thermodata = "{}/thermo.dat".format(outdir)
if generate_ref_data:
    os.system("cp {} reference/thermo.dat".format(thermodata))
thermo_hdr = open(thermodata).readline().split()
thermo_new = numpy.loadtxt(thermodata,skiprows=1)
thermo_ref = numpy.loadtxt("reference/thermo.dat",skiprows=1)

pylab.clf()
for i in range(1,len(thermo_new[0,:])-1):
    pylab.plot(thermo_new[:,0],thermo_new[:,i],label=thermo_hdr[i]+"-ref");
    pylab.plot(thermo_ref[:,0],thermo_ref[:,i],label=thermo_hdr[i]+"-new",linestyle='--');
    error = numpy.sqrt(testlib.integrate(thermo_ref[:,0],(thermo_ref[:,i]-thermo_new[:,i])**2))
    error /= numpy.sqrt(testlib.integrate(thermo_ref[:,0],thermo_ref[:,i]**2))
    print("{} error = {}".format(thermo_hdr[i],error))
    if error > tolerance or math.isnan(error):
        raise(Exception("Error in thermo.dat - {}".format(thermo_hdr[i])))
pylab.legend(ncol=2)
pylab.savefig("{}/thermo.png".format(outdir))

exit(0)


    


