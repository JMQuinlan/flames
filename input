

alamo.program = mechanics
#alamo.program.mechanics.model = elastic.pseudolinearcubicpredeformed
alamo.program.mechanics.model = affine.cubic

plot_file		    = output

# this is not a time integration, so do
# exactly one timestep and then quit
timestep		    = 0.1
stop_time		    = 0.1

# amr parameters
amr.plot_int		    = 1
amr.max_level		    = 3
amr.n_cell		    = 32 32 32
amr.blocking_factor	    = 8
amr.regrid_int		    = 1
amr.grid_eff		    = 1.0
amr.cell.all                = 1

# geometry
geometry.prob_lo	    = -8 -8 -8 
geometry.prob_hi	    = 8 8 8
geometry.is_periodic	    = 0 0 0

# ellipse configuration
#ic.type        = ellipse
#ic.ellipse.a   = 1.0 0.75 0.5  # ellipse radii
#ic.ellipse.x0  = 0 0 0 # location of ellipse center
#ic.ellipse.eps = 0.1 # diffuse boundary

ic.type = expression
ic.expression.constant.eps = "0.2"
ic.expression.constant.L = "1.0"
ic.expression.region0 =       "0.5*(1.0 + tanh((sqrt(y**2)-L)/eps))"
ic.expression.region1 = "1.0 - 0.5*(1.0 + tanh((sqrt(y**2)-L)/eps))"

# elastic moduli
nmodels = 2

model1.C11 = 16.3
model1.C12 = 1.221
model1.C44 = 0.757
#model1.F0  = 1.0 0.0 0 0 1.0 0 0 0 1.0 # eigenstrain
model2.C11 = 16.3
model2.C12 = 1.221
model2.C44 = 0.757
model2.F0  = 1.0 0.1 0 0 1.0 0 0 0 1.0 # eigenstrain
model2.F0  = 0.0 1.0 0 0 0.0 0 0 0 0.0 # eigenstrain

solver.verbose = 3
solver.nriters = 100
solver.nrtolerance = 1E-6
solver.max_iter = 2000



### --- Faces
bc.constant.type.xlo = trac trac
bc.constant.type.xhi = trac trac
bc.constant.type.ylo = disp disp
bc.constant.type.yhi = trac disp

### --- Edges
###     XY edges
bc.constant.type.xloylo = disp disp
bc.constant.type.xhiylo = disp disp
bc.constant.type.xloyhi = trac disp
bc.constant.type.xhiyhi = trac disp

