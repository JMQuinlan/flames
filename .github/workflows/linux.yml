name: Linux

on: [push, pull_request]

jobs:
  tabs:
    name: Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Tabs
        run: .github/workflows/style/check_tabs.py
  editorconfig-compliance:
    name: Editorconfig Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: update aptitude
        run: sudo apt update
      - name: installing npm
        run: sudo apt install npm
      - name: installing eclint
        run: npm install -g eclint
      - name: EditorConfigCompliance
        run: eclint check src/
  documentation-check:
    name: Make sure all inputs are documented
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: checking documentation coverage
        run: bash scripts/checkdoc.py
  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: make
      run: make docs
  test-coverage:
    name: Determine regression test coverage
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: configure (2d)
      run: ./configure --dim=2 --coverage 
    - name: make
      continue-on-error: true
      run: make
    - name: unit tests
      continue-on-error: true
      run: ./bin/test-2d-coverage-g++
    - name: configure (3d)
      continue-on-error: true
      run: ./configure --dim=3 --coverage
    - name: make
      continue-on-error: true
      run: make
    - name: unit tests
      continue-on-error: true
      run: ./bin/test-3d-coverage-g++
    - name: regression tests
      continue-on-error: true
      run: scripts/runtests.py --only-coverage --serial --dim=2 --timeout=200

  test-2d-20-04:
    name: 2D Build & Test (20.04)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: configure (2d)
      run: ./configure --dim=2 
    - name: make
      run: make
    - name: unit tests
      run: ./bin/test-2d-g++
    - name: regression tests
      run: scripts/runtests.py --serial --no-coverage --dim=2 --benchmark=github --timeout=200
  test-3d-20-04:
    name: 3D Build & Test (20.04)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: configure
      run: ./configure --dim=3 
    - name: make
      run: make
    - name: unit tests
      run: ./bin/test-3d-g++
    - name: regression tests
      run: scripts/runtests.py --serial --no-coverage --dim=3 --benchmark=github --timeout=200
  test-2d-22-04:
    name: 2D Build & Test (22.04)
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: configure (2d)
      run: ./configure --dim=2 
    - name: make
      run: make
    - name: unit tests
      run: ./bin/test-2d-g++
    - name: regression tests
      run: scripts/runtests.py --serial --no-coverage --dim=2 --benchmark=github  --timeout=200
  test-3d-22-04:
    name: 3D Build & Test (22.04)
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: configure
      run: ./configure --dim=3 
    - name: make
      run: make
    - name: unit tests
      run: ./bin/test-3d-g++
    - name: regression tests
      run: scripts/runtests.py --serial --no-coverage --dim=3 --benchmark=github  --timeout=200
  test-2d-22-04-clang:
    name: 2D Build & Test (22.04)
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: installing preliminaries
      run: bash .github/workflows/dependencies.sh
    - name: installing clang
      run: sudo apt install clang
    - name: configure (2d)
      run: ./configure --dim=2 --comp=clang++
    - name: make
      run: make
    - name: unit tests
      run: ./bin/test-2d-clang++
    - name: regression tests
      run: scripts/runtests.py --serial --no-coverage --dim=2 --benchmark=github --comp=clang++  --timeout=200
